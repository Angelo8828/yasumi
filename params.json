{"name":"Yasumi","tagline":"Yasumi is an easy PHP Library for calculating national holidays.","body":"[![Latest Stable Version](https://poser.pugx.org/azuyalabs/yasumi/v/stable.svg)](https://packagist.org/packages/azuyalabs/yasumi) [![Total Downloads](https://poser.pugx.org/azuyalabs/yasumi/downloads.svg)](https://packagist.org/packages/azuyalabs/yasumi) [![Latest Unstable Version](https://poser.pugx.org/azuyalabs/yasumi/v/unstable.svg)](https://packagist.org/packages/azuyalabs/yasumi) [![License](https://poser.pugx.org/azuyalabs/yasumi/license.svg)](https://packagist.org/packages/azuyalabs/yasumi) [![Build Status](https://travis-ci.org/azuyalabs/yasumi.svg?branch=master)](https://travis-ci.org/azuyalabs/yasumi)\r\nYasumi\r\n==========\r\n\r\nYasumi (Japanese for 'Holiday') is an easy PHP library to help you calculate the dates and names of holidays and other\r\nspecial celebrations from various countries/states. Many services exist on the internet that provide holidays, however\r\nare either not free or offer only limited information. In addition, no complete PHP library seems to exist today\r\nthat covers a wide range of holidays and countries, except maybe PEAR's Date_Holidays which unfortunately hasn't been\r\nupdated for a while.\r\n\r\nThe goal of Yasumi is to be powerful while remaining lightweight, by utilizing PHP native classes wherever possible.\r\nYasumi's calculation is provider-based (i.e. by country/state) so it is easy to add new holiday providers that calculate\r\nholidays. The methods of Yasumi can be used to get a holiday's date and name in various languages.\r\n\r\n\r\nHighlights\r\n-------\r\n\r\n* Simple API\r\n* Use of Providers to easily extend and expand new Holidays\r\n* Common Holiday Providers\r\n* Global Translations\r\n* Implements ArrayIterator to easily process a provider's holidays\r\n* Filters enabling to easily select certain holiday types (Official, Observed, Bank, Seasonal or Other) \r\n* Fully documented\r\n* Fully Unit tested\r\n* Framework-agnostic\r\n* Composer ready, [PSR-2] compliant\r\n\r\nCurrently the following holiday providers are implemented:\r\n\r\n* Japan\r\n* Netherlands\r\n* Belgium\r\n* USA\r\n* Italy\r\n* France\r\n* Spain (including the autonomous communities Andalusia, Aragon, Asturias, Balearic Islands, Basque Country, \r\n         Canary Islands, Cantabria, Castile and LeÃ³n, Castilla-La Mancha, Ceuta, Community of Madrid, Extremadura, \r\n         Galicia, La Rioja, Melilla, Navarre, Region of Murcia, Valencian Community)\r\n\r\n\r\nYasumi has the following filters to allow you to filter only certain type of holidays:\r\n\r\n* Official\r\n* Observed\r\n* Bank\r\n* Seasonal\r\n* Other\r\n\r\n\r\nSystem Requirements\r\n-------------------\r\n\r\nYou need **PHP >= 5.5.0** to use `azuyalabs/yasumi` but the latest stable version of PHP is recommended.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nInstall `azuyalabs/yasumi` using Composer.\r\n\r\n```\r\n$ composer require azuyalabs/yasumi\r\n```\r\n\r\n\r\nTesting\r\n-------\r\n\r\nYasumi has a [PHPUnit](https://phpunit.de/) test suite. To run the tests, run the following command from the project \r\nfolder:\r\n\r\n``` bash\r\n$ phpunit\r\n```\r\n\r\nYasumi has over 700 unit tests with multiple iterations of assertions. Since Yasumi is using randomized years for asserting\r\nthe holidays, multiple iterations of assertions are executed to ensure the holidays are calculated in a large number\r\nof years.\r\n\r\nThe tests are organized in some test suites to make testing a bit more easier:\r\n\r\n* Base       : For testing the base functionality of Yasumi\r\n* Japan      : For separately testing the Japan Holiday Provider\r\n* Netherlands: For separately testing the Netherlands Holiday Provider\r\n* Belgium    : For separately testing the Belgium Holiday Provider\r\n* USA        : For separately testing the USA Holiday Provider\r\n* Italy      : For separately testing the Italy Holiday Provider\r\n* France     : For separately testing the France Holiday Provider\r\n* Spain      : For separately testing the Spain Holiday Provider\r\n\r\n\r\nBasic Usage\r\n-------\r\n\r\n```php\r\n<?php\r\n// Require the composer auto loader\r\nrequire 'vendor/autoload.php';\r\n\r\nuse Yasumi\\Yasumi;\r\nuse Yasumi\\Filters\\OfficialHolidaysFilter;\r\n\r\n// Use the factory to create a new holiday provider instance\r\n$holidays = Yasumi::create('USA', 2016);\r\n\r\n// Get the number of defined holidays\r\necho $holidays->count() . PHP_EOL;\r\n// 11\r\n\r\n// Get a list all of the holiday names (short names)\r\nforeach ($holidays->getHolidayNames() as $name) {\r\n    echo $name . PHP_EOL;\r\n}\r\n// 'newYearsDay'\r\n// 'martinLutherKingDay'\r\n// 'washingtonsBirthday'\r\n// 'memorialDay'\r\n// 'substituteHoliday:independenceDay'\r\n// 'independenceDay'\r\n// 'labourDay'\r\n// 'columbusDay'\r\n// 'veteransDay'\r\n// 'thanksgivingDay'\r\n// 'christmasDay'\r\n\r\n// Get a list all of the holiday dates\r\nforeach ($holidays->getHolidayDates() as $date) {\r\n    echo $date . PHP_EOL;\r\n}\r\n// 2016-01-01\r\n// 2016-01-18\r\n// 2016-02-15\r\n// 2016-05-30\r\n// 2016-07-04\r\n// 2016-09-05\r\n// 2016-10-10\r\n// 2016-11-11\r\n// 2016-11-24\r\n// 2016-12-25\r\n// 2016-12-26\r\n\r\n// Get a holiday object for Independence Day\r\n$independenceDay = $holidays->getHoliday('independenceDay');\r\n\r\n// Get the localized name\r\necho $independenceDay->getName() . PHP_EOL;\r\n// 'Independence Day'\r\n\r\n// Get the date\r\necho $independenceDay . PHP_EOL;\r\n// '2016-07-04'\r\n\r\n// Get the type of holiday\r\necho $independenceDay->getType() . PHP_EOL;\r\n// 'national'\r\n\r\n// Print the holiday as a JSON object\r\necho json_encode($independenceDay, JSON_PRETTY_PRINT);\r\n// {\r\n//    \"shortName\": \"independenceDay\",\r\n//    \"translations\": {\r\n//    \"en_US\": \"Independence Day\"\r\n//    },\r\n//    \"date\": \"2016-07-04 00:00:00.000000\",\r\n//    \"timezone_type\": 3,\r\n//    \"timezone\": \"America\\/New_York\"\r\n// }\r\n\r\n// Retrieve only the official holidays for the Netherlands in 2014\r\n$holidays = Yasumi::create('Netherlands', 2014);\r\n$official = new OfficialHolidaysFilter($holidays->getIterator());\r\nforeach ($official as $day) {\r\n    echo $day->getName() . PHP_EOL;\r\n}\r\n// 'New Year's Day'\r\n// 'Easter Sunday'\r\n// 'Easter Monday'\r\n// 'Kings Day'\r\n// 'Ascension Day'\r\n// 'Whitsunday'\r\n// 'Whitmonday'\r\n// 'Christmas'\r\n// 'Boxing Day'\r\n```\r\n\r\nLicense\r\n-------\r\n\r\nThe MIT License (MIT). Please see [LICENSE](LICENSE) for more information.\r\n\r\n[PSR-2]: http://www.php-fig.org/psr/psr-2/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}